// 非健全的空安全
// 一个 Dart 程序可以同时包含已经是 空安全 和未迁移至空安全的库。这些 混合模式的程序 会运行在 非健全的空安全 下

void main(List<String> args) {
// 健全和非健全的空安全
/**
 * 为了在保持与传统库运行时的兼容性的同时，能为健全的空安全程序提供健全性， Dart 工具提供了以下两种模式的支持：
以 非健全的空安全 运行的混合模式的程序。在运行时有可能出现 null 引用错误，但这只是因为一些 null 值和可空类型在非空安全的库中污染了空安全的代码。
当程序完全迁移至空安全，且它所依赖的库 全部 都迁移完成后，它就在以 健全的空安全 运行，拥有所有由健全性带来的保证和编译优化。
*/

// 逐步迁移
/**
 * 因为 Dart 支持混合模式的空安全，所以你可以一个个迁移你的库（通常是一个文件），同时能正常运行程序和测试。
我们推荐你 优先迁移最下层的库——指的是没有导入其他包的库。接着迁移直接依赖了下层库的依赖库。最后再迁移依赖项最多的库
 */
}
